version: "3.8"

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - app-network
    environment:
      - FLASK_APP=server.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./Backend:/app
      - backend_data:/app/data
      - backend_results:/app/Results
      - backend_jsons:/app/Jsons
      - backend_inputs:/app/Inputs
      - backend_executables:/app/executables

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - NODE_ENV=production
      - GENERATE_SOURCEMAP=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./Frontend:/app
      - /app/node_modules
      - frontend_build:/app/build

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  backend_data:
    driver: local
  backend_results:
    driver: local
  backend_jsons:
    driver: local
  backend_inputs:
    driver: local
  backend_executables:
    driver: local
  frontend_build:
    driver: local
